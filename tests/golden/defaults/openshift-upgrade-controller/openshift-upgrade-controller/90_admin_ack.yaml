apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  labels:
    name: admin-ack
  name: admin-ack
  namespace: appuio-openshift-upgrade-controller
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: {}
  labels:
    name: admin-ack
  name: admin-ack
  namespace: appuio-openshift-upgrade-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: admin-ack
    namespace: appuio-openshift-upgrade-controller
---
apiVersion: v1
data:
  adminack: |
    #!/bin/bash
    set -xeuo pipefail

    version="${JOB_spec_desiredVersion_version:-}"

    if [ -z "${version}" ]; then
      echo "No version defined, skipping ack"
      exit 0
    fi

    majorMinor=$(printf "%s" "$version" | cut -d "." -f 1,2)

    ackKey=$(printf "%s" "$OVERRIDES_JSON" | jq -r --arg majorMinor "$majorMinor" '.[$majorMinor] // ""')

    if [ -z "${ackKey}" ]; then
      minor=$(printf "%s" "$version" | cut -d "." -f 2)
      lastMinor=$((minor - 1))
      kubernetesMinor=$((minor + 13))
      ackKey="ack-4.${lastMinor}-kube-1.${kubernetesMinor}-api-removals-in-4.${minor}"
    fi

    patch=$(jq -nc --arg ackKey "$ackKey" '{ data: { ($ackKey): "true" } }')

    echo "Patching ConfigMap $CM_NAME in namespace $CM_NAMESPACE with '$patch'"
    oc -n "$CM_NAMESPACE" patch cm "$CM_NAME" --patch "$patch" --type=merge
kind: ConfigMap
metadata:
  annotations: {}
  labels:
    name: admin-ack
  name: admin-ack
  namespace: appuio-openshift-upgrade-controller
---
apiVersion: managedupgrade.appuio.io/v1beta1
kind: UpgradeJobHook
metadata:
  annotations: {}
  labels:
    name: admin-ack
  name: admin-ack
  namespace: appuio-openshift-upgrade-controller
spec:
  events:
    - Create
  selector:
    matchLabels:
      upgradeconfig/name: appuio-monday-afternoon
  template:
    spec:
      template:
        spec:
          containers:
            - args: []
              command:
                - /usr/local/bin/adminack
              env:
                - name: CM_NAME
                  value: admin-acks
                - name: CM_NAMESPACE
                  value: openshift-config
                - name: OVERRIDES_JSON
                  value: '{}'
              image: quay.io/appuio/oc:v4.19
              imagePullPolicy: IfNotPresent
              name: adminack
              ports: []
              stdin: false
              tty: false
              volumeMounts:
                - mountPath: /usr/local/bin/adminack
                  name: scripts
                  readOnly: true
                  subPath: adminack
          nodeSelector:
            node-role.kubernetes.io/infra: ''
          priorityClassName: system-cluster-critical
          restartPolicy: Never
          serviceAccountName: admin-ack
          volumes:
            - configMap:
                defaultMode: 360
                name: admin-ack
              name: scripts
